// Code generated by generate_unzip.pl; DO NOT EDIT.

package slices

import (
	"github.com/shogo82148/go-container/tuples"
)

// Unzip1 converts a slice of 1-tuples to slices of each elements.
func Unzip1[T1 any](s []tuples.Tuple1[T1]) []T1 {
	s1 := make([]T1, len(s))
	for i, t := range s {
		s1[i] = t.V1
	}
	return s1
}

// Unzip2 converts a slice of 2-tuples to slices of each elements.
func Unzip2[T1, T2 any](s []tuples.Tuple2[T1, T2]) ([]T1, []T2) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
	}
	return s1, s2
}

// Unzip3 converts a slice of 3-tuples to slices of each elements.
func Unzip3[T1, T2, T3 any](s []tuples.Tuple3[T1, T2, T3]) ([]T1, []T2, []T3) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
	}
	return s1, s2, s3
}

// Unzip4 converts a slice of 4-tuples to slices of each elements.
func Unzip4[T1, T2, T3, T4 any](s []tuples.Tuple4[T1, T2, T3, T4]) ([]T1, []T2, []T3, []T4) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
	}
	return s1, s2, s3, s4
}

// Unzip5 converts a slice of 5-tuples to slices of each elements.
func Unzip5[T1, T2, T3, T4, T5 any](s []tuples.Tuple5[T1, T2, T3, T4, T5]) ([]T1, []T2, []T3, []T4, []T5) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
	}
	return s1, s2, s3, s4, s5
}

// Unzip6 converts a slice of 6-tuples to slices of each elements.
func Unzip6[T1, T2, T3, T4, T5, T6 any](s []tuples.Tuple6[T1, T2, T3, T4, T5, T6]) ([]T1, []T2, []T3, []T4, []T5, []T6) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
	}
	return s1, s2, s3, s4, s5, s6
}

// Unzip7 converts a slice of 7-tuples to slices of each elements.
func Unzip7[T1, T2, T3, T4, T5, T6, T7 any](s []tuples.Tuple7[T1, T2, T3, T4, T5, T6, T7]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
	}
	return s1, s2, s3, s4, s5, s6, s7
}

// Unzip8 converts a slice of 8-tuples to slices of each elements.
func Unzip8[T1, T2, T3, T4, T5, T6, T7, T8 any](s []tuples.Tuple8[T1, T2, T3, T4, T5, T6, T7, T8]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
	}
	return s1, s2, s3, s4, s5, s6, s7, s8
}

// Unzip9 converts a slice of 9-tuples to slices of each elements.
func Unzip9[T1, T2, T3, T4, T5, T6, T7, T8, T9 any](s []tuples.Tuple9[T1, T2, T3, T4, T5, T6, T7, T8, T9]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9
}

// Unzip10 converts a slice of 10-tuples to slices of each elements.
func Unzip10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 any](s []tuples.Tuple10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10
}

// Unzip11 converts a slice of 11-tuples to slices of each elements.
func Unzip11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 any](s []tuples.Tuple11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11
}

// Unzip12 converts a slice of 12-tuples to slices of each elements.
func Unzip12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 any](s []tuples.Tuple12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12
}

// Unzip13 converts a slice of 13-tuples to slices of each elements.
func Unzip13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 any](s []tuples.Tuple13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13
}

// Unzip14 converts a slice of 14-tuples to slices of each elements.
func Unzip14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 any](s []tuples.Tuple14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14
}

// Unzip15 converts a slice of 15-tuples to slices of each elements.
func Unzip15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 any](s []tuples.Tuple15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15
}

// Unzip16 converts a slice of 16-tuples to slices of each elements.
func Unzip16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 any](s []tuples.Tuple16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16
}

// Unzip17 converts a slice of 17-tuples to slices of each elements.
func Unzip17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 any](s []tuples.Tuple17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17
}

// Unzip18 converts a slice of 18-tuples to slices of each elements.
func Unzip18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 any](s []tuples.Tuple18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18
}

// Unzip19 converts a slice of 19-tuples to slices of each elements.
func Unzip19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 any](s []tuples.Tuple19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19
}

// Unzip20 converts a slice of 20-tuples to slices of each elements.
func Unzip20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 any](s []tuples.Tuple20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20
}

// Unzip21 converts a slice of 21-tuples to slices of each elements.
func Unzip21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 any](s []tuples.Tuple21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21
}

// Unzip22 converts a slice of 22-tuples to slices of each elements.
func Unzip22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 any](s []tuples.Tuple22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22
}

// Unzip23 converts a slice of 23-tuples to slices of each elements.
func Unzip23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 any](s []tuples.Tuple23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23
}

// Unzip24 converts a slice of 24-tuples to slices of each elements.
func Unzip24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 any](s []tuples.Tuple24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24
}

// Unzip25 converts a slice of 25-tuples to slices of each elements.
func Unzip25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 any](s []tuples.Tuple25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25
}

// Unzip26 converts a slice of 26-tuples to slices of each elements.
func Unzip26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 any](s []tuples.Tuple26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26
}

// Unzip27 converts a slice of 27-tuples to slices of each elements.
func Unzip27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 any](s []tuples.Tuple27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27
}

// Unzip28 converts a slice of 28-tuples to slices of each elements.
func Unzip28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 any](s []tuples.Tuple28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28
}

// Unzip29 converts a slice of 29-tuples to slices of each elements.
func Unzip29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 any](s []tuples.Tuple29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29
}

// Unzip30 converts a slice of 30-tuples to slices of each elements.
func Unzip30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 any](s []tuples.Tuple30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30
}

// Unzip31 converts a slice of 31-tuples to slices of each elements.
func Unzip31[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 any](s []tuples.Tuple31[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31
}

// Unzip32 converts a slice of 32-tuples to slices of each elements.
func Unzip32[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 any](s []tuples.Tuple32[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32
}

// Unzip33 converts a slice of 33-tuples to slices of each elements.
func Unzip33[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 any](s []tuples.Tuple33[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33
}

// Unzip34 converts a slice of 34-tuples to slices of each elements.
func Unzip34[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 any](s []tuples.Tuple34[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34
}

// Unzip35 converts a slice of 35-tuples to slices of each elements.
func Unzip35[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 any](s []tuples.Tuple35[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35
}

// Unzip36 converts a slice of 36-tuples to slices of each elements.
func Unzip36[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 any](s []tuples.Tuple36[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36
}

// Unzip37 converts a slice of 37-tuples to slices of each elements.
func Unzip37[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 any](s []tuples.Tuple37[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37
}

// Unzip38 converts a slice of 38-tuples to slices of each elements.
func Unzip38[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 any](s []tuples.Tuple38[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38
}

// Unzip39 converts a slice of 39-tuples to slices of each elements.
func Unzip39[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 any](s []tuples.Tuple39[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39
}

// Unzip40 converts a slice of 40-tuples to slices of each elements.
func Unzip40[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 any](s []tuples.Tuple40[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40
}

// Unzip41 converts a slice of 41-tuples to slices of each elements.
func Unzip41[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 any](s []tuples.Tuple41[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41
}

// Unzip42 converts a slice of 42-tuples to slices of each elements.
func Unzip42[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 any](s []tuples.Tuple42[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42
}

// Unzip43 converts a slice of 43-tuples to slices of each elements.
func Unzip43[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 any](s []tuples.Tuple43[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43
}

// Unzip44 converts a slice of 44-tuples to slices of each elements.
func Unzip44[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 any](s []tuples.Tuple44[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44
}

// Unzip45 converts a slice of 45-tuples to slices of each elements.
func Unzip45[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 any](s []tuples.Tuple45[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45
}

// Unzip46 converts a slice of 46-tuples to slices of each elements.
func Unzip46[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 any](s []tuples.Tuple46[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46
}

// Unzip47 converts a slice of 47-tuples to slices of each elements.
func Unzip47[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 any](s []tuples.Tuple47[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46, []T47) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	s47 := make([]T47, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
		s47[i] = t.V47
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47
}

// Unzip48 converts a slice of 48-tuples to slices of each elements.
func Unzip48[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 any](s []tuples.Tuple48[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46, []T47, []T48) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	s47 := make([]T47, len(s))
	s48 := make([]T48, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
		s47[i] = t.V47
		s48[i] = t.V48
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48
}

// Unzip49 converts a slice of 49-tuples to slices of each elements.
func Unzip49[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 any](s []tuples.Tuple49[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46, []T47, []T48, []T49) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	s47 := make([]T47, len(s))
	s48 := make([]T48, len(s))
	s49 := make([]T49, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
		s47[i] = t.V47
		s48[i] = t.V48
		s49[i] = t.V49
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49
}

// Unzip50 converts a slice of 50-tuples to slices of each elements.
func Unzip50[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 any](s []tuples.Tuple50[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46, []T47, []T48, []T49, []T50) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	s47 := make([]T47, len(s))
	s48 := make([]T48, len(s))
	s49 := make([]T49, len(s))
	s50 := make([]T50, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
		s47[i] = t.V47
		s48[i] = t.V48
		s49[i] = t.V49
		s50[i] = t.V50
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50
}

// Unzip51 converts a slice of 51-tuples to slices of each elements.
func Unzip51[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51 any](s []tuples.Tuple51[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46, []T47, []T48, []T49, []T50, []T51) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	s47 := make([]T47, len(s))
	s48 := make([]T48, len(s))
	s49 := make([]T49, len(s))
	s50 := make([]T50, len(s))
	s51 := make([]T51, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
		s47[i] = t.V47
		s48[i] = t.V48
		s49[i] = t.V49
		s50[i] = t.V50
		s51[i] = t.V51
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50, s51
}

// Unzip52 converts a slice of 52-tuples to slices of each elements.
func Unzip52[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52 any](s []tuples.Tuple52[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46, []T47, []T48, []T49, []T50, []T51, []T52) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	s47 := make([]T47, len(s))
	s48 := make([]T48, len(s))
	s49 := make([]T49, len(s))
	s50 := make([]T50, len(s))
	s51 := make([]T51, len(s))
	s52 := make([]T52, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
		s47[i] = t.V47
		s48[i] = t.V48
		s49[i] = t.V49
		s50[i] = t.V50
		s51[i] = t.V51
		s52[i] = t.V52
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50, s51, s52
}

// Unzip53 converts a slice of 53-tuples to slices of each elements.
func Unzip53[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53 any](s []tuples.Tuple53[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46, []T47, []T48, []T49, []T50, []T51, []T52, []T53) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	s47 := make([]T47, len(s))
	s48 := make([]T48, len(s))
	s49 := make([]T49, len(s))
	s50 := make([]T50, len(s))
	s51 := make([]T51, len(s))
	s52 := make([]T52, len(s))
	s53 := make([]T53, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
		s47[i] = t.V47
		s48[i] = t.V48
		s49[i] = t.V49
		s50[i] = t.V50
		s51[i] = t.V51
		s52[i] = t.V52
		s53[i] = t.V53
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50, s51, s52, s53
}

// Unzip54 converts a slice of 54-tuples to slices of each elements.
func Unzip54[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54 any](s []tuples.Tuple54[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46, []T47, []T48, []T49, []T50, []T51, []T52, []T53, []T54) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	s47 := make([]T47, len(s))
	s48 := make([]T48, len(s))
	s49 := make([]T49, len(s))
	s50 := make([]T50, len(s))
	s51 := make([]T51, len(s))
	s52 := make([]T52, len(s))
	s53 := make([]T53, len(s))
	s54 := make([]T54, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
		s47[i] = t.V47
		s48[i] = t.V48
		s49[i] = t.V49
		s50[i] = t.V50
		s51[i] = t.V51
		s52[i] = t.V52
		s53[i] = t.V53
		s54[i] = t.V54
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50, s51, s52, s53, s54
}

// Unzip55 converts a slice of 55-tuples to slices of each elements.
func Unzip55[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55 any](s []tuples.Tuple55[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46, []T47, []T48, []T49, []T50, []T51, []T52, []T53, []T54, []T55) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	s47 := make([]T47, len(s))
	s48 := make([]T48, len(s))
	s49 := make([]T49, len(s))
	s50 := make([]T50, len(s))
	s51 := make([]T51, len(s))
	s52 := make([]T52, len(s))
	s53 := make([]T53, len(s))
	s54 := make([]T54, len(s))
	s55 := make([]T55, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
		s47[i] = t.V47
		s48[i] = t.V48
		s49[i] = t.V49
		s50[i] = t.V50
		s51[i] = t.V51
		s52[i] = t.V52
		s53[i] = t.V53
		s54[i] = t.V54
		s55[i] = t.V55
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50, s51, s52, s53, s54, s55
}

// Unzip56 converts a slice of 56-tuples to slices of each elements.
func Unzip56[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56 any](s []tuples.Tuple56[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46, []T47, []T48, []T49, []T50, []T51, []T52, []T53, []T54, []T55, []T56) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	s47 := make([]T47, len(s))
	s48 := make([]T48, len(s))
	s49 := make([]T49, len(s))
	s50 := make([]T50, len(s))
	s51 := make([]T51, len(s))
	s52 := make([]T52, len(s))
	s53 := make([]T53, len(s))
	s54 := make([]T54, len(s))
	s55 := make([]T55, len(s))
	s56 := make([]T56, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
		s47[i] = t.V47
		s48[i] = t.V48
		s49[i] = t.V49
		s50[i] = t.V50
		s51[i] = t.V51
		s52[i] = t.V52
		s53[i] = t.V53
		s54[i] = t.V54
		s55[i] = t.V55
		s56[i] = t.V56
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50, s51, s52, s53, s54, s55, s56
}

// Unzip57 converts a slice of 57-tuples to slices of each elements.
func Unzip57[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57 any](s []tuples.Tuple57[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46, []T47, []T48, []T49, []T50, []T51, []T52, []T53, []T54, []T55, []T56, []T57) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	s47 := make([]T47, len(s))
	s48 := make([]T48, len(s))
	s49 := make([]T49, len(s))
	s50 := make([]T50, len(s))
	s51 := make([]T51, len(s))
	s52 := make([]T52, len(s))
	s53 := make([]T53, len(s))
	s54 := make([]T54, len(s))
	s55 := make([]T55, len(s))
	s56 := make([]T56, len(s))
	s57 := make([]T57, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
		s47[i] = t.V47
		s48[i] = t.V48
		s49[i] = t.V49
		s50[i] = t.V50
		s51[i] = t.V51
		s52[i] = t.V52
		s53[i] = t.V53
		s54[i] = t.V54
		s55[i] = t.V55
		s56[i] = t.V56
		s57[i] = t.V57
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50, s51, s52, s53, s54, s55, s56, s57
}

// Unzip58 converts a slice of 58-tuples to slices of each elements.
func Unzip58[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58 any](s []tuples.Tuple58[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46, []T47, []T48, []T49, []T50, []T51, []T52, []T53, []T54, []T55, []T56, []T57, []T58) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	s47 := make([]T47, len(s))
	s48 := make([]T48, len(s))
	s49 := make([]T49, len(s))
	s50 := make([]T50, len(s))
	s51 := make([]T51, len(s))
	s52 := make([]T52, len(s))
	s53 := make([]T53, len(s))
	s54 := make([]T54, len(s))
	s55 := make([]T55, len(s))
	s56 := make([]T56, len(s))
	s57 := make([]T57, len(s))
	s58 := make([]T58, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
		s47[i] = t.V47
		s48[i] = t.V48
		s49[i] = t.V49
		s50[i] = t.V50
		s51[i] = t.V51
		s52[i] = t.V52
		s53[i] = t.V53
		s54[i] = t.V54
		s55[i] = t.V55
		s56[i] = t.V56
		s57[i] = t.V57
		s58[i] = t.V58
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50, s51, s52, s53, s54, s55, s56, s57, s58
}

// Unzip59 converts a slice of 59-tuples to slices of each elements.
func Unzip59[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59 any](s []tuples.Tuple59[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46, []T47, []T48, []T49, []T50, []T51, []T52, []T53, []T54, []T55, []T56, []T57, []T58, []T59) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	s47 := make([]T47, len(s))
	s48 := make([]T48, len(s))
	s49 := make([]T49, len(s))
	s50 := make([]T50, len(s))
	s51 := make([]T51, len(s))
	s52 := make([]T52, len(s))
	s53 := make([]T53, len(s))
	s54 := make([]T54, len(s))
	s55 := make([]T55, len(s))
	s56 := make([]T56, len(s))
	s57 := make([]T57, len(s))
	s58 := make([]T58, len(s))
	s59 := make([]T59, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
		s47[i] = t.V47
		s48[i] = t.V48
		s49[i] = t.V49
		s50[i] = t.V50
		s51[i] = t.V51
		s52[i] = t.V52
		s53[i] = t.V53
		s54[i] = t.V54
		s55[i] = t.V55
		s56[i] = t.V56
		s57[i] = t.V57
		s58[i] = t.V58
		s59[i] = t.V59
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50, s51, s52, s53, s54, s55, s56, s57, s58, s59
}

// Unzip60 converts a slice of 60-tuples to slices of each elements.
func Unzip60[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60 any](s []tuples.Tuple60[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46, []T47, []T48, []T49, []T50, []T51, []T52, []T53, []T54, []T55, []T56, []T57, []T58, []T59, []T60) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	s47 := make([]T47, len(s))
	s48 := make([]T48, len(s))
	s49 := make([]T49, len(s))
	s50 := make([]T50, len(s))
	s51 := make([]T51, len(s))
	s52 := make([]T52, len(s))
	s53 := make([]T53, len(s))
	s54 := make([]T54, len(s))
	s55 := make([]T55, len(s))
	s56 := make([]T56, len(s))
	s57 := make([]T57, len(s))
	s58 := make([]T58, len(s))
	s59 := make([]T59, len(s))
	s60 := make([]T60, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
		s47[i] = t.V47
		s48[i] = t.V48
		s49[i] = t.V49
		s50[i] = t.V50
		s51[i] = t.V51
		s52[i] = t.V52
		s53[i] = t.V53
		s54[i] = t.V54
		s55[i] = t.V55
		s56[i] = t.V56
		s57[i] = t.V57
		s58[i] = t.V58
		s59[i] = t.V59
		s60[i] = t.V60
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50, s51, s52, s53, s54, s55, s56, s57, s58, s59, s60
}

// Unzip61 converts a slice of 61-tuples to slices of each elements.
func Unzip61[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61 any](s []tuples.Tuple61[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46, []T47, []T48, []T49, []T50, []T51, []T52, []T53, []T54, []T55, []T56, []T57, []T58, []T59, []T60, []T61) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	s47 := make([]T47, len(s))
	s48 := make([]T48, len(s))
	s49 := make([]T49, len(s))
	s50 := make([]T50, len(s))
	s51 := make([]T51, len(s))
	s52 := make([]T52, len(s))
	s53 := make([]T53, len(s))
	s54 := make([]T54, len(s))
	s55 := make([]T55, len(s))
	s56 := make([]T56, len(s))
	s57 := make([]T57, len(s))
	s58 := make([]T58, len(s))
	s59 := make([]T59, len(s))
	s60 := make([]T60, len(s))
	s61 := make([]T61, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
		s47[i] = t.V47
		s48[i] = t.V48
		s49[i] = t.V49
		s50[i] = t.V50
		s51[i] = t.V51
		s52[i] = t.V52
		s53[i] = t.V53
		s54[i] = t.V54
		s55[i] = t.V55
		s56[i] = t.V56
		s57[i] = t.V57
		s58[i] = t.V58
		s59[i] = t.V59
		s60[i] = t.V60
		s61[i] = t.V61
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50, s51, s52, s53, s54, s55, s56, s57, s58, s59, s60, s61
}

// Unzip62 converts a slice of 62-tuples to slices of each elements.
func Unzip62[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62 any](s []tuples.Tuple62[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46, []T47, []T48, []T49, []T50, []T51, []T52, []T53, []T54, []T55, []T56, []T57, []T58, []T59, []T60, []T61, []T62) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	s47 := make([]T47, len(s))
	s48 := make([]T48, len(s))
	s49 := make([]T49, len(s))
	s50 := make([]T50, len(s))
	s51 := make([]T51, len(s))
	s52 := make([]T52, len(s))
	s53 := make([]T53, len(s))
	s54 := make([]T54, len(s))
	s55 := make([]T55, len(s))
	s56 := make([]T56, len(s))
	s57 := make([]T57, len(s))
	s58 := make([]T58, len(s))
	s59 := make([]T59, len(s))
	s60 := make([]T60, len(s))
	s61 := make([]T61, len(s))
	s62 := make([]T62, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
		s47[i] = t.V47
		s48[i] = t.V48
		s49[i] = t.V49
		s50[i] = t.V50
		s51[i] = t.V51
		s52[i] = t.V52
		s53[i] = t.V53
		s54[i] = t.V54
		s55[i] = t.V55
		s56[i] = t.V56
		s57[i] = t.V57
		s58[i] = t.V58
		s59[i] = t.V59
		s60[i] = t.V60
		s61[i] = t.V61
		s62[i] = t.V62
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50, s51, s52, s53, s54, s55, s56, s57, s58, s59, s60, s61, s62
}

// Unzip63 converts a slice of 63-tuples to slices of each elements.
func Unzip63[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63 any](s []tuples.Tuple63[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46, []T47, []T48, []T49, []T50, []T51, []T52, []T53, []T54, []T55, []T56, []T57, []T58, []T59, []T60, []T61, []T62, []T63) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	s47 := make([]T47, len(s))
	s48 := make([]T48, len(s))
	s49 := make([]T49, len(s))
	s50 := make([]T50, len(s))
	s51 := make([]T51, len(s))
	s52 := make([]T52, len(s))
	s53 := make([]T53, len(s))
	s54 := make([]T54, len(s))
	s55 := make([]T55, len(s))
	s56 := make([]T56, len(s))
	s57 := make([]T57, len(s))
	s58 := make([]T58, len(s))
	s59 := make([]T59, len(s))
	s60 := make([]T60, len(s))
	s61 := make([]T61, len(s))
	s62 := make([]T62, len(s))
	s63 := make([]T63, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
		s47[i] = t.V47
		s48[i] = t.V48
		s49[i] = t.V49
		s50[i] = t.V50
		s51[i] = t.V51
		s52[i] = t.V52
		s53[i] = t.V53
		s54[i] = t.V54
		s55[i] = t.V55
		s56[i] = t.V56
		s57[i] = t.V57
		s58[i] = t.V58
		s59[i] = t.V59
		s60[i] = t.V60
		s61[i] = t.V61
		s62[i] = t.V62
		s63[i] = t.V63
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50, s51, s52, s53, s54, s55, s56, s57, s58, s59, s60, s61, s62, s63
}

// Unzip64 converts a slice of 64-tuples to slices of each elements.
func Unzip64[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64 any](s []tuples.Tuple64[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64]) ([]T1, []T2, []T3, []T4, []T5, []T6, []T7, []T8, []T9, []T10, []T11, []T12, []T13, []T14, []T15, []T16, []T17, []T18, []T19, []T20, []T21, []T22, []T23, []T24, []T25, []T26, []T27, []T28, []T29, []T30, []T31, []T32, []T33, []T34, []T35, []T36, []T37, []T38, []T39, []T40, []T41, []T42, []T43, []T44, []T45, []T46, []T47, []T48, []T49, []T50, []T51, []T52, []T53, []T54, []T55, []T56, []T57, []T58, []T59, []T60, []T61, []T62, []T63, []T64) {
	s1 := make([]T1, len(s))
	s2 := make([]T2, len(s))
	s3 := make([]T3, len(s))
	s4 := make([]T4, len(s))
	s5 := make([]T5, len(s))
	s6 := make([]T6, len(s))
	s7 := make([]T7, len(s))
	s8 := make([]T8, len(s))
	s9 := make([]T9, len(s))
	s10 := make([]T10, len(s))
	s11 := make([]T11, len(s))
	s12 := make([]T12, len(s))
	s13 := make([]T13, len(s))
	s14 := make([]T14, len(s))
	s15 := make([]T15, len(s))
	s16 := make([]T16, len(s))
	s17 := make([]T17, len(s))
	s18 := make([]T18, len(s))
	s19 := make([]T19, len(s))
	s20 := make([]T20, len(s))
	s21 := make([]T21, len(s))
	s22 := make([]T22, len(s))
	s23 := make([]T23, len(s))
	s24 := make([]T24, len(s))
	s25 := make([]T25, len(s))
	s26 := make([]T26, len(s))
	s27 := make([]T27, len(s))
	s28 := make([]T28, len(s))
	s29 := make([]T29, len(s))
	s30 := make([]T30, len(s))
	s31 := make([]T31, len(s))
	s32 := make([]T32, len(s))
	s33 := make([]T33, len(s))
	s34 := make([]T34, len(s))
	s35 := make([]T35, len(s))
	s36 := make([]T36, len(s))
	s37 := make([]T37, len(s))
	s38 := make([]T38, len(s))
	s39 := make([]T39, len(s))
	s40 := make([]T40, len(s))
	s41 := make([]T41, len(s))
	s42 := make([]T42, len(s))
	s43 := make([]T43, len(s))
	s44 := make([]T44, len(s))
	s45 := make([]T45, len(s))
	s46 := make([]T46, len(s))
	s47 := make([]T47, len(s))
	s48 := make([]T48, len(s))
	s49 := make([]T49, len(s))
	s50 := make([]T50, len(s))
	s51 := make([]T51, len(s))
	s52 := make([]T52, len(s))
	s53 := make([]T53, len(s))
	s54 := make([]T54, len(s))
	s55 := make([]T55, len(s))
	s56 := make([]T56, len(s))
	s57 := make([]T57, len(s))
	s58 := make([]T58, len(s))
	s59 := make([]T59, len(s))
	s60 := make([]T60, len(s))
	s61 := make([]T61, len(s))
	s62 := make([]T62, len(s))
	s63 := make([]T63, len(s))
	s64 := make([]T64, len(s))
	for i, t := range s {
		s1[i] = t.V1
		s2[i] = t.V2
		s3[i] = t.V3
		s4[i] = t.V4
		s5[i] = t.V5
		s6[i] = t.V6
		s7[i] = t.V7
		s8[i] = t.V8
		s9[i] = t.V9
		s10[i] = t.V10
		s11[i] = t.V11
		s12[i] = t.V12
		s13[i] = t.V13
		s14[i] = t.V14
		s15[i] = t.V15
		s16[i] = t.V16
		s17[i] = t.V17
		s18[i] = t.V18
		s19[i] = t.V19
		s20[i] = t.V20
		s21[i] = t.V21
		s22[i] = t.V22
		s23[i] = t.V23
		s24[i] = t.V24
		s25[i] = t.V25
		s26[i] = t.V26
		s27[i] = t.V27
		s28[i] = t.V28
		s29[i] = t.V29
		s30[i] = t.V30
		s31[i] = t.V31
		s32[i] = t.V32
		s33[i] = t.V33
		s34[i] = t.V34
		s35[i] = t.V35
		s36[i] = t.V36
		s37[i] = t.V37
		s38[i] = t.V38
		s39[i] = t.V39
		s40[i] = t.V40
		s41[i] = t.V41
		s42[i] = t.V42
		s43[i] = t.V43
		s44[i] = t.V44
		s45[i] = t.V45
		s46[i] = t.V46
		s47[i] = t.V47
		s48[i] = t.V48
		s49[i] = t.V49
		s50[i] = t.V50
		s51[i] = t.V51
		s52[i] = t.V52
		s53[i] = t.V53
		s54[i] = t.V54
		s55[i] = t.V55
		s56[i] = t.V56
		s57[i] = t.V57
		s58[i] = t.V58
		s59[i] = t.V59
		s60[i] = t.V60
		s61[i] = t.V61
		s62[i] = t.V62
		s63[i] = t.V63
		s64[i] = t.V64
	}
	return s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50, s51, s52, s53, s54, s55, s56, s57, s58, s59, s60, s61, s62, s63, s64
}
