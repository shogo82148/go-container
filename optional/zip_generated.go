// Code generated by generate_zip.pl; DO NOT EDIT.

package optional

import (
	"github.com/shogo82148/go-container/tuples"
)

// Zip1 returns an optional of 1-tuples.
func Zip1[T optional[tuples.Tuple1[T1]], T1 any](v1 Optional[T1]) T {
	if v1.valid {
		return T{
			value: tuples.Tuple1[T1]{v1.value},
			valid: true,
		}
	}
	return T{}
}

// Zip2 returns an optional of 2-tuples.
func Zip2[T optional[tuples.Tuple2[T1, T2]], T1, T2 any](v1 Optional[T1], v2 Optional[T2]) T {
	if v1.valid && v2.valid {
		return T{
			value: tuples.Tuple2[T1, T2]{v1.value, v2.value},
			valid: true,
		}
	}
	return T{}
}

// Zip3 returns an optional of 3-tuples.
func Zip3[T optional[tuples.Tuple3[T1, T2, T3]], T1, T2, T3 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3]) T {
	if v1.valid && v2.valid && v3.valid {
		return T{
			value: tuples.Tuple3[T1, T2, T3]{v1.value, v2.value, v3.value},
			valid: true,
		}
	}
	return T{}
}

// Zip4 returns an optional of 4-tuples.
func Zip4[T optional[tuples.Tuple4[T1, T2, T3, T4]], T1, T2, T3, T4 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid {
		return T{
			value: tuples.Tuple4[T1, T2, T3, T4]{v1.value, v2.value, v3.value, v4.value},
			valid: true,
		}
	}
	return T{}
}

// Zip5 returns an optional of 5-tuples.
func Zip5[T optional[tuples.Tuple5[T1, T2, T3, T4, T5]], T1, T2, T3, T4, T5 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid {
		return T{
			value: tuples.Tuple5[T1, T2, T3, T4, T5]{v1.value, v2.value, v3.value, v4.value, v5.value},
			valid: true,
		}
	}
	return T{}
}

// Zip6 returns an optional of 6-tuples.
func Zip6[T optional[tuples.Tuple6[T1, T2, T3, T4, T5, T6]], T1, T2, T3, T4, T5, T6 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid {
		return T{
			value: tuples.Tuple6[T1, T2, T3, T4, T5, T6]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value},
			valid: true,
		}
	}
	return T{}
}

// Zip7 returns an optional of 7-tuples.
func Zip7[T optional[tuples.Tuple7[T1, T2, T3, T4, T5, T6, T7]], T1, T2, T3, T4, T5, T6, T7 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid {
		return T{
			value: tuples.Tuple7[T1, T2, T3, T4, T5, T6, T7]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value},
			valid: true,
		}
	}
	return T{}
}

// Zip8 returns an optional of 8-tuples.
func Zip8[T optional[tuples.Tuple8[T1, T2, T3, T4, T5, T6, T7, T8]], T1, T2, T3, T4, T5, T6, T7, T8 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid {
		return T{
			value: tuples.Tuple8[T1, T2, T3, T4, T5, T6, T7, T8]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value},
			valid: true,
		}
	}
	return T{}
}

// Zip9 returns an optional of 9-tuples.
func Zip9[T optional[tuples.Tuple9[T1, T2, T3, T4, T5, T6, T7, T8, T9]], T1, T2, T3, T4, T5, T6, T7, T8, T9 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid {
		return T{
			value: tuples.Tuple9[T1, T2, T3, T4, T5, T6, T7, T8, T9]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value},
			valid: true,
		}
	}
	return T{}
}

// Zip10 returns an optional of 10-tuples.
func Zip10[T optional[tuples.Tuple10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid {
		return T{
			value: tuples.Tuple10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value},
			valid: true,
		}
	}
	return T{}
}

// Zip11 returns an optional of 11-tuples.
func Zip11[T optional[tuples.Tuple11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid {
		return T{
			value: tuples.Tuple11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value},
			valid: true,
		}
	}
	return T{}
}

// Zip12 returns an optional of 12-tuples.
func Zip12[T optional[tuples.Tuple12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid {
		return T{
			value: tuples.Tuple12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value},
			valid: true,
		}
	}
	return T{}
}

// Zip13 returns an optional of 13-tuples.
func Zip13[T optional[tuples.Tuple13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid {
		return T{
			value: tuples.Tuple13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value},
			valid: true,
		}
	}
	return T{}
}

// Zip14 returns an optional of 14-tuples.
func Zip14[T optional[tuples.Tuple14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid {
		return T{
			value: tuples.Tuple14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value},
			valid: true,
		}
	}
	return T{}
}

// Zip15 returns an optional of 15-tuples.
func Zip15[T optional[tuples.Tuple15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid {
		return T{
			value: tuples.Tuple15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value},
			valid: true,
		}
	}
	return T{}
}

// Zip16 returns an optional of 16-tuples.
func Zip16[T optional[tuples.Tuple16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid {
		return T{
			value: tuples.Tuple16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value},
			valid: true,
		}
	}
	return T{}
}

// Zip17 returns an optional of 17-tuples.
func Zip17[T optional[tuples.Tuple17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid {
		return T{
			value: tuples.Tuple17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value},
			valid: true,
		}
	}
	return T{}
}

// Zip18 returns an optional of 18-tuples.
func Zip18[T optional[tuples.Tuple18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid {
		return T{
			value: tuples.Tuple18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value},
			valid: true,
		}
	}
	return T{}
}

// Zip19 returns an optional of 19-tuples.
func Zip19[T optional[tuples.Tuple19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid {
		return T{
			value: tuples.Tuple19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value},
			valid: true,
		}
	}
	return T{}
}

// Zip20 returns an optional of 20-tuples.
func Zip20[T optional[tuples.Tuple20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid {
		return T{
			value: tuples.Tuple20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value},
			valid: true,
		}
	}
	return T{}
}

// Zip21 returns an optional of 21-tuples.
func Zip21[T optional[tuples.Tuple21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid {
		return T{
			value: tuples.Tuple21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value},
			valid: true,
		}
	}
	return T{}
}

// Zip22 returns an optional of 22-tuples.
func Zip22[T optional[tuples.Tuple22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid {
		return T{
			value: tuples.Tuple22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value},
			valid: true,
		}
	}
	return T{}
}

// Zip23 returns an optional of 23-tuples.
func Zip23[T optional[tuples.Tuple23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid {
		return T{
			value: tuples.Tuple23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value},
			valid: true,
		}
	}
	return T{}
}

// Zip24 returns an optional of 24-tuples.
func Zip24[T optional[tuples.Tuple24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid {
		return T{
			value: tuples.Tuple24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value},
			valid: true,
		}
	}
	return T{}
}

// Zip25 returns an optional of 25-tuples.
func Zip25[T optional[tuples.Tuple25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid {
		return T{
			value: tuples.Tuple25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value},
			valid: true,
		}
	}
	return T{}
}

// Zip26 returns an optional of 26-tuples.
func Zip26[T optional[tuples.Tuple26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid {
		return T{
			value: tuples.Tuple26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value},
			valid: true,
		}
	}
	return T{}
}

// Zip27 returns an optional of 27-tuples.
func Zip27[T optional[tuples.Tuple27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid {
		return T{
			value: tuples.Tuple27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value},
			valid: true,
		}
	}
	return T{}
}

// Zip28 returns an optional of 28-tuples.
func Zip28[T optional[tuples.Tuple28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid {
		return T{
			value: tuples.Tuple28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value},
			valid: true,
		}
	}
	return T{}
}

// Zip29 returns an optional of 29-tuples.
func Zip29[T optional[tuples.Tuple29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid {
		return T{
			value: tuples.Tuple29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value},
			valid: true,
		}
	}
	return T{}
}

// Zip30 returns an optional of 30-tuples.
func Zip30[T optional[tuples.Tuple30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid {
		return T{
			value: tuples.Tuple30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value},
			valid: true,
		}
	}
	return T{}
}

// Zip31 returns an optional of 31-tuples.
func Zip31[T optional[tuples.Tuple31[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid {
		return T{
			value: tuples.Tuple31[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value},
			valid: true,
		}
	}
	return T{}
}

// Zip32 returns an optional of 32-tuples.
func Zip32[T optional[tuples.Tuple32[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid {
		return T{
			value: tuples.Tuple32[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value},
			valid: true,
		}
	}
	return T{}
}

// Zip33 returns an optional of 33-tuples.
func Zip33[T optional[tuples.Tuple33[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid {
		return T{
			value: tuples.Tuple33[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value},
			valid: true,
		}
	}
	return T{}
}

// Zip34 returns an optional of 34-tuples.
func Zip34[T optional[tuples.Tuple34[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid {
		return T{
			value: tuples.Tuple34[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value},
			valid: true,
		}
	}
	return T{}
}

// Zip35 returns an optional of 35-tuples.
func Zip35[T optional[tuples.Tuple35[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid {
		return T{
			value: tuples.Tuple35[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value},
			valid: true,
		}
	}
	return T{}
}

// Zip36 returns an optional of 36-tuples.
func Zip36[T optional[tuples.Tuple36[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid {
		return T{
			value: tuples.Tuple36[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value},
			valid: true,
		}
	}
	return T{}
}

// Zip37 returns an optional of 37-tuples.
func Zip37[T optional[tuples.Tuple37[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid {
		return T{
			value: tuples.Tuple37[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value},
			valid: true,
		}
	}
	return T{}
}

// Zip38 returns an optional of 38-tuples.
func Zip38[T optional[tuples.Tuple38[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid {
		return T{
			value: tuples.Tuple38[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value},
			valid: true,
		}
	}
	return T{}
}

// Zip39 returns an optional of 39-tuples.
func Zip39[T optional[tuples.Tuple39[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid {
		return T{
			value: tuples.Tuple39[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value},
			valid: true,
		}
	}
	return T{}
}

// Zip40 returns an optional of 40-tuples.
func Zip40[T optional[tuples.Tuple40[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid {
		return T{
			value: tuples.Tuple40[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value},
			valid: true,
		}
	}
	return T{}
}

// Zip41 returns an optional of 41-tuples.
func Zip41[T optional[tuples.Tuple41[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid {
		return T{
			value: tuples.Tuple41[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value},
			valid: true,
		}
	}
	return T{}
}

// Zip42 returns an optional of 42-tuples.
func Zip42[T optional[tuples.Tuple42[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid {
		return T{
			value: tuples.Tuple42[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value},
			valid: true,
		}
	}
	return T{}
}

// Zip43 returns an optional of 43-tuples.
func Zip43[T optional[tuples.Tuple43[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid {
		return T{
			value: tuples.Tuple43[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value},
			valid: true,
		}
	}
	return T{}
}

// Zip44 returns an optional of 44-tuples.
func Zip44[T optional[tuples.Tuple44[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid {
		return T{
			value: tuples.Tuple44[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value},
			valid: true,
		}
	}
	return T{}
}

// Zip45 returns an optional of 45-tuples.
func Zip45[T optional[tuples.Tuple45[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid {
		return T{
			value: tuples.Tuple45[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value},
			valid: true,
		}
	}
	return T{}
}

// Zip46 returns an optional of 46-tuples.
func Zip46[T optional[tuples.Tuple46[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid {
		return T{
			value: tuples.Tuple46[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value},
			valid: true,
		}
	}
	return T{}
}

// Zip47 returns an optional of 47-tuples.
func Zip47[T optional[tuples.Tuple47[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid {
		return T{
			value: tuples.Tuple47[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value, v47.value},
			valid: true,
		}
	}
	return T{}
}

// Zip48 returns an optional of 48-tuples.
func Zip48[T optional[tuples.Tuple48[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid {
		return T{
			value: tuples.Tuple48[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value, v47.value, v48.value},
			valid: true,
		}
	}
	return T{}
}

// Zip49 returns an optional of 49-tuples.
func Zip49[T optional[tuples.Tuple49[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid {
		return T{
			value: tuples.Tuple49[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value, v47.value, v48.value, v49.value},
			valid: true,
		}
	}
	return T{}
}

// Zip50 returns an optional of 50-tuples.
func Zip50[T optional[tuples.Tuple50[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid {
		return T{
			value: tuples.Tuple50[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value, v47.value, v48.value, v49.value, v50.value},
			valid: true,
		}
	}
	return T{}
}

// Zip51 returns an optional of 51-tuples.
func Zip51[T optional[tuples.Tuple51[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid {
		return T{
			value: tuples.Tuple51[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value, v47.value, v48.value, v49.value, v50.value, v51.value},
			valid: true,
		}
	}
	return T{}
}

// Zip52 returns an optional of 52-tuples.
func Zip52[T optional[tuples.Tuple52[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid {
		return T{
			value: tuples.Tuple52[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value, v47.value, v48.value, v49.value, v50.value, v51.value, v52.value},
			valid: true,
		}
	}
	return T{}
}

// Zip53 returns an optional of 53-tuples.
func Zip53[T optional[tuples.Tuple53[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid {
		return T{
			value: tuples.Tuple53[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value, v47.value, v48.value, v49.value, v50.value, v51.value, v52.value, v53.value},
			valid: true,
		}
	}
	return T{}
}

// Zip54 returns an optional of 54-tuples.
func Zip54[T optional[tuples.Tuple54[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid {
		return T{
			value: tuples.Tuple54[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value, v47.value, v48.value, v49.value, v50.value, v51.value, v52.value, v53.value, v54.value},
			valid: true,
		}
	}
	return T{}
}

// Zip55 returns an optional of 55-tuples.
func Zip55[T optional[tuples.Tuple55[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid {
		return T{
			value: tuples.Tuple55[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value, v47.value, v48.value, v49.value, v50.value, v51.value, v52.value, v53.value, v54.value, v55.value},
			valid: true,
		}
	}
	return T{}
}

// Zip56 returns an optional of 56-tuples.
func Zip56[T optional[tuples.Tuple56[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55], v56 Optional[T56]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid && v56.valid {
		return T{
			value: tuples.Tuple56[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value, v47.value, v48.value, v49.value, v50.value, v51.value, v52.value, v53.value, v54.value, v55.value, v56.value},
			valid: true,
		}
	}
	return T{}
}

// Zip57 returns an optional of 57-tuples.
func Zip57[T optional[tuples.Tuple57[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55], v56 Optional[T56], v57 Optional[T57]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid && v56.valid && v57.valid {
		return T{
			value: tuples.Tuple57[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value, v47.value, v48.value, v49.value, v50.value, v51.value, v52.value, v53.value, v54.value, v55.value, v56.value, v57.value},
			valid: true,
		}
	}
	return T{}
}

// Zip58 returns an optional of 58-tuples.
func Zip58[T optional[tuples.Tuple58[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55], v56 Optional[T56], v57 Optional[T57], v58 Optional[T58]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid && v56.valid && v57.valid && v58.valid {
		return T{
			value: tuples.Tuple58[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value, v47.value, v48.value, v49.value, v50.value, v51.value, v52.value, v53.value, v54.value, v55.value, v56.value, v57.value, v58.value},
			valid: true,
		}
	}
	return T{}
}

// Zip59 returns an optional of 59-tuples.
func Zip59[T optional[tuples.Tuple59[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55], v56 Optional[T56], v57 Optional[T57], v58 Optional[T58], v59 Optional[T59]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid && v56.valid && v57.valid && v58.valid && v59.valid {
		return T{
			value: tuples.Tuple59[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value, v47.value, v48.value, v49.value, v50.value, v51.value, v52.value, v53.value, v54.value, v55.value, v56.value, v57.value, v58.value, v59.value},
			valid: true,
		}
	}
	return T{}
}

// Zip60 returns an optional of 60-tuples.
func Zip60[T optional[tuples.Tuple60[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55], v56 Optional[T56], v57 Optional[T57], v58 Optional[T58], v59 Optional[T59], v60 Optional[T60]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid && v56.valid && v57.valid && v58.valid && v59.valid && v60.valid {
		return T{
			value: tuples.Tuple60[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value, v47.value, v48.value, v49.value, v50.value, v51.value, v52.value, v53.value, v54.value, v55.value, v56.value, v57.value, v58.value, v59.value, v60.value},
			valid: true,
		}
	}
	return T{}
}

// Zip61 returns an optional of 61-tuples.
func Zip61[T optional[tuples.Tuple61[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55], v56 Optional[T56], v57 Optional[T57], v58 Optional[T58], v59 Optional[T59], v60 Optional[T60], v61 Optional[T61]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid && v56.valid && v57.valid && v58.valid && v59.valid && v60.valid && v61.valid {
		return T{
			value: tuples.Tuple61[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value, v47.value, v48.value, v49.value, v50.value, v51.value, v52.value, v53.value, v54.value, v55.value, v56.value, v57.value, v58.value, v59.value, v60.value, v61.value},
			valid: true,
		}
	}
	return T{}
}

// Zip62 returns an optional of 62-tuples.
func Zip62[T optional[tuples.Tuple62[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55], v56 Optional[T56], v57 Optional[T57], v58 Optional[T58], v59 Optional[T59], v60 Optional[T60], v61 Optional[T61], v62 Optional[T62]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid && v56.valid && v57.valid && v58.valid && v59.valid && v60.valid && v61.valid && v62.valid {
		return T{
			value: tuples.Tuple62[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value, v47.value, v48.value, v49.value, v50.value, v51.value, v52.value, v53.value, v54.value, v55.value, v56.value, v57.value, v58.value, v59.value, v60.value, v61.value, v62.value},
			valid: true,
		}
	}
	return T{}
}

// Zip63 returns an optional of 63-tuples.
func Zip63[T optional[tuples.Tuple63[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55], v56 Optional[T56], v57 Optional[T57], v58 Optional[T58], v59 Optional[T59], v60 Optional[T60], v61 Optional[T61], v62 Optional[T62], v63 Optional[T63]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid && v56.valid && v57.valid && v58.valid && v59.valid && v60.valid && v61.valid && v62.valid && v63.valid {
		return T{
			value: tuples.Tuple63[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value, v47.value, v48.value, v49.value, v50.value, v51.value, v52.value, v53.value, v54.value, v55.value, v56.value, v57.value, v58.value, v59.value, v60.value, v61.value, v62.value, v63.value},
			valid: true,
		}
	}
	return T{}
}

// Zip64 returns an optional of 64-tuples.
func Zip64[T optional[tuples.Tuple64[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64]], T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55], v56 Optional[T56], v57 Optional[T57], v58 Optional[T58], v59 Optional[T59], v60 Optional[T60], v61 Optional[T61], v62 Optional[T62], v63 Optional[T63], v64 Optional[T64]) T {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid && v56.valid && v57.valid && v58.valid && v59.valid && v60.valid && v61.valid && v62.valid && v63.valid && v64.valid {
		return T{
			value: tuples.Tuple64[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64]{v1.value, v2.value, v3.value, v4.value, v5.value, v6.value, v7.value, v8.value, v9.value, v10.value, v11.value, v12.value, v13.value, v14.value, v15.value, v16.value, v17.value, v18.value, v19.value, v20.value, v21.value, v22.value, v23.value, v24.value, v25.value, v26.value, v27.value, v28.value, v29.value, v30.value, v31.value, v32.value, v33.value, v34.value, v35.value, v36.value, v37.value, v38.value, v39.value, v40.value, v41.value, v42.value, v43.value, v44.value, v45.value, v46.value, v47.value, v48.value, v49.value, v50.value, v51.value, v52.value, v53.value, v54.value, v55.value, v56.value, v57.value, v58.value, v59.value, v60.value, v61.value, v62.value, v63.value, v64.value},
			valid: true,
		}
	}
	return T{}
}
