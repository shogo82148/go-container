// Code generated by generate_zip.pl; DO NOT EDIT.

package optional

import (
	"github.com/shogo82148/go-container/tuples"
)

// Zip1 returns an optional of 1-tuples.
func Zip1[T1 any](v1 Optional[T1]) Optional[tuples.Tuple1[T1]] {
	if v1.valid {
		return Optional[tuples.Tuple1[T1]]{
			value: tuples.Tuple1[T1]{V1: v1.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple1[T1]]{}
}

// Zip2 returns an optional of 2-tuples.
func Zip2[T1, T2 any](v1 Optional[T1], v2 Optional[T2]) Optional[tuples.Tuple2[T1, T2]] {
	if v1.valid && v2.valid {
		return Optional[tuples.Tuple2[T1, T2]]{
			value: tuples.Tuple2[T1, T2]{V1: v1.value, V2: v2.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple2[T1, T2]]{}
}

// Zip3 returns an optional of 3-tuples.
func Zip3[T1, T2, T3 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3]) Optional[tuples.Tuple3[T1, T2, T3]] {
	if v1.valid && v2.valid && v3.valid {
		return Optional[tuples.Tuple3[T1, T2, T3]]{
			value: tuples.Tuple3[T1, T2, T3]{V1: v1.value, V2: v2.value, V3: v3.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple3[T1, T2, T3]]{}
}

// Zip4 returns an optional of 4-tuples.
func Zip4[T1, T2, T3, T4 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4]) Optional[tuples.Tuple4[T1, T2, T3, T4]] {
	if v1.valid && v2.valid && v3.valid && v4.valid {
		return Optional[tuples.Tuple4[T1, T2, T3, T4]]{
			value: tuples.Tuple4[T1, T2, T3, T4]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple4[T1, T2, T3, T4]]{}
}

// Zip5 returns an optional of 5-tuples.
func Zip5[T1, T2, T3, T4, T5 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5]) Optional[tuples.Tuple5[T1, T2, T3, T4, T5]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid {
		return Optional[tuples.Tuple5[T1, T2, T3, T4, T5]]{
			value: tuples.Tuple5[T1, T2, T3, T4, T5]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple5[T1, T2, T3, T4, T5]]{}
}

// Zip6 returns an optional of 6-tuples.
func Zip6[T1, T2, T3, T4, T5, T6 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6]) Optional[tuples.Tuple6[T1, T2, T3, T4, T5, T6]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid {
		return Optional[tuples.Tuple6[T1, T2, T3, T4, T5, T6]]{
			value: tuples.Tuple6[T1, T2, T3, T4, T5, T6]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple6[T1, T2, T3, T4, T5, T6]]{}
}

// Zip7 returns an optional of 7-tuples.
func Zip7[T1, T2, T3, T4, T5, T6, T7 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7]) Optional[tuples.Tuple7[T1, T2, T3, T4, T5, T6, T7]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid {
		return Optional[tuples.Tuple7[T1, T2, T3, T4, T5, T6, T7]]{
			value: tuples.Tuple7[T1, T2, T3, T4, T5, T6, T7]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple7[T1, T2, T3, T4, T5, T6, T7]]{}
}

// Zip8 returns an optional of 8-tuples.
func Zip8[T1, T2, T3, T4, T5, T6, T7, T8 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8]) Optional[tuples.Tuple8[T1, T2, T3, T4, T5, T6, T7, T8]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid {
		return Optional[tuples.Tuple8[T1, T2, T3, T4, T5, T6, T7, T8]]{
			value: tuples.Tuple8[T1, T2, T3, T4, T5, T6, T7, T8]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple8[T1, T2, T3, T4, T5, T6, T7, T8]]{}
}

// Zip9 returns an optional of 9-tuples.
func Zip9[T1, T2, T3, T4, T5, T6, T7, T8, T9 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9]) Optional[tuples.Tuple9[T1, T2, T3, T4, T5, T6, T7, T8, T9]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid {
		return Optional[tuples.Tuple9[T1, T2, T3, T4, T5, T6, T7, T8, T9]]{
			value: tuples.Tuple9[T1, T2, T3, T4, T5, T6, T7, T8, T9]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple9[T1, T2, T3, T4, T5, T6, T7, T8, T9]]{}
}

// Zip10 returns an optional of 10-tuples.
func Zip10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10]) Optional[tuples.Tuple10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid {
		return Optional[tuples.Tuple10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]]{
			value: tuples.Tuple10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]]{}
}

// Zip11 returns an optional of 11-tuples.
func Zip11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11]) Optional[tuples.Tuple11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid {
		return Optional[tuples.Tuple11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]]{
			value: tuples.Tuple11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]]{}
}

// Zip12 returns an optional of 12-tuples.
func Zip12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12]) Optional[tuples.Tuple12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid {
		return Optional[tuples.Tuple12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]]{
			value: tuples.Tuple12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]]{}
}

// Zip13 returns an optional of 13-tuples.
func Zip13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13]) Optional[tuples.Tuple13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid {
		return Optional[tuples.Tuple13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]]{
			value: tuples.Tuple13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]]{}
}

// Zip14 returns an optional of 14-tuples.
func Zip14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14]) Optional[tuples.Tuple14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid {
		return Optional[tuples.Tuple14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]]{
			value: tuples.Tuple14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]]{}
}

// Zip15 returns an optional of 15-tuples.
func Zip15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15]) Optional[tuples.Tuple15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid {
		return Optional[tuples.Tuple15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]]{
			value: tuples.Tuple15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]]{}
}

// Zip16 returns an optional of 16-tuples.
func Zip16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16]) Optional[tuples.Tuple16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid {
		return Optional[tuples.Tuple16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]]{
			value: tuples.Tuple16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]]{}
}

// Zip17 returns an optional of 17-tuples.
func Zip17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17]) Optional[tuples.Tuple17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid {
		return Optional[tuples.Tuple17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]]{
			value: tuples.Tuple17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]]{}
}

// Zip18 returns an optional of 18-tuples.
func Zip18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18]) Optional[tuples.Tuple18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid {
		return Optional[tuples.Tuple18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]]{
			value: tuples.Tuple18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]]{}
}

// Zip19 returns an optional of 19-tuples.
func Zip19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19]) Optional[tuples.Tuple19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid {
		return Optional[tuples.Tuple19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]]{
			value: tuples.Tuple19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]]{}
}

// Zip20 returns an optional of 20-tuples.
func Zip20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20]) Optional[tuples.Tuple20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid {
		return Optional[tuples.Tuple20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]]{
			value: tuples.Tuple20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]]{}
}

// Zip21 returns an optional of 21-tuples.
func Zip21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21]) Optional[tuples.Tuple21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid {
		return Optional[tuples.Tuple21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]]{
			value: tuples.Tuple21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]]{}
}

// Zip22 returns an optional of 22-tuples.
func Zip22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22]) Optional[tuples.Tuple22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid {
		return Optional[tuples.Tuple22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]]{
			value: tuples.Tuple22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]]{}
}

// Zip23 returns an optional of 23-tuples.
func Zip23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23]) Optional[tuples.Tuple23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid {
		return Optional[tuples.Tuple23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23]]{
			value: tuples.Tuple23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple23[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23]]{}
}

// Zip24 returns an optional of 24-tuples.
func Zip24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24]) Optional[tuples.Tuple24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid {
		return Optional[tuples.Tuple24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24]]{
			value: tuples.Tuple24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple24[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24]]{}
}

// Zip25 returns an optional of 25-tuples.
func Zip25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25]) Optional[tuples.Tuple25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid {
		return Optional[tuples.Tuple25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25]]{
			value: tuples.Tuple25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple25[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25]]{}
}

// Zip26 returns an optional of 26-tuples.
func Zip26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26]) Optional[tuples.Tuple26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid {
		return Optional[tuples.Tuple26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26]]{
			value: tuples.Tuple26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple26[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26]]{}
}

// Zip27 returns an optional of 27-tuples.
func Zip27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27]) Optional[tuples.Tuple27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid {
		return Optional[tuples.Tuple27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27]]{
			value: tuples.Tuple27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple27[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27]]{}
}

// Zip28 returns an optional of 28-tuples.
func Zip28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28]) Optional[tuples.Tuple28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid {
		return Optional[tuples.Tuple28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28]]{
			value: tuples.Tuple28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple28[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28]]{}
}

// Zip29 returns an optional of 29-tuples.
func Zip29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29]) Optional[tuples.Tuple29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid {
		return Optional[tuples.Tuple29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29]]{
			value: tuples.Tuple29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple29[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29]]{}
}

// Zip30 returns an optional of 30-tuples.
func Zip30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30]) Optional[tuples.Tuple30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid {
		return Optional[tuples.Tuple30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30]]{
			value: tuples.Tuple30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple30[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30]]{}
}

// Zip31 returns an optional of 31-tuples.
func Zip31[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31]) Optional[tuples.Tuple31[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid {
		return Optional[tuples.Tuple31[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31]]{
			value: tuples.Tuple31[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple31[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31]]{}
}

// Zip32 returns an optional of 32-tuples.
func Zip32[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32]) Optional[tuples.Tuple32[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid {
		return Optional[tuples.Tuple32[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32]]{
			value: tuples.Tuple32[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple32[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32]]{}
}

// Zip33 returns an optional of 33-tuples.
func Zip33[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33]) Optional[tuples.Tuple33[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid {
		return Optional[tuples.Tuple33[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33]]{
			value: tuples.Tuple33[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple33[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33]]{}
}

// Zip34 returns an optional of 34-tuples.
func Zip34[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34]) Optional[tuples.Tuple34[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid {
		return Optional[tuples.Tuple34[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34]]{
			value: tuples.Tuple34[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple34[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34]]{}
}

// Zip35 returns an optional of 35-tuples.
func Zip35[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35]) Optional[tuples.Tuple35[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid {
		return Optional[tuples.Tuple35[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35]]{
			value: tuples.Tuple35[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple35[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35]]{}
}

// Zip36 returns an optional of 36-tuples.
func Zip36[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36]) Optional[tuples.Tuple36[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid {
		return Optional[tuples.Tuple36[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36]]{
			value: tuples.Tuple36[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple36[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36]]{}
}

// Zip37 returns an optional of 37-tuples.
func Zip37[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37]) Optional[tuples.Tuple37[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid {
		return Optional[tuples.Tuple37[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37]]{
			value: tuples.Tuple37[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple37[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37]]{}
}

// Zip38 returns an optional of 38-tuples.
func Zip38[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38]) Optional[tuples.Tuple38[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid {
		return Optional[tuples.Tuple38[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38]]{
			value: tuples.Tuple38[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple38[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38]]{}
}

// Zip39 returns an optional of 39-tuples.
func Zip39[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39]) Optional[tuples.Tuple39[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid {
		return Optional[tuples.Tuple39[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39]]{
			value: tuples.Tuple39[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple39[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39]]{}
}

// Zip40 returns an optional of 40-tuples.
func Zip40[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40]) Optional[tuples.Tuple40[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid {
		return Optional[tuples.Tuple40[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40]]{
			value: tuples.Tuple40[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple40[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40]]{}
}

// Zip41 returns an optional of 41-tuples.
func Zip41[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41]) Optional[tuples.Tuple41[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid {
		return Optional[tuples.Tuple41[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41]]{
			value: tuples.Tuple41[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple41[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41]]{}
}

// Zip42 returns an optional of 42-tuples.
func Zip42[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42]) Optional[tuples.Tuple42[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid {
		return Optional[tuples.Tuple42[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42]]{
			value: tuples.Tuple42[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple42[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42]]{}
}

// Zip43 returns an optional of 43-tuples.
func Zip43[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43]) Optional[tuples.Tuple43[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid {
		return Optional[tuples.Tuple43[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43]]{
			value: tuples.Tuple43[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple43[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43]]{}
}

// Zip44 returns an optional of 44-tuples.
func Zip44[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44]) Optional[tuples.Tuple44[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid {
		return Optional[tuples.Tuple44[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44]]{
			value: tuples.Tuple44[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple44[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44]]{}
}

// Zip45 returns an optional of 45-tuples.
func Zip45[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45]) Optional[tuples.Tuple45[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid {
		return Optional[tuples.Tuple45[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45]]{
			value: tuples.Tuple45[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple45[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45]]{}
}

// Zip46 returns an optional of 46-tuples.
func Zip46[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46]) Optional[tuples.Tuple46[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid {
		return Optional[tuples.Tuple46[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46]]{
			value: tuples.Tuple46[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple46[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46]]{}
}

// Zip47 returns an optional of 47-tuples.
func Zip47[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47]) Optional[tuples.Tuple47[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid {
		return Optional[tuples.Tuple47[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47]]{
			value: tuples.Tuple47[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value, V47: v47.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple47[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47]]{}
}

// Zip48 returns an optional of 48-tuples.
func Zip48[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48]) Optional[tuples.Tuple48[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid {
		return Optional[tuples.Tuple48[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48]]{
			value: tuples.Tuple48[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value, V47: v47.value, V48: v48.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple48[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48]]{}
}

// Zip49 returns an optional of 49-tuples.
func Zip49[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49]) Optional[tuples.Tuple49[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid {
		return Optional[tuples.Tuple49[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49]]{
			value: tuples.Tuple49[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value, V47: v47.value, V48: v48.value, V49: v49.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple49[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49]]{}
}

// Zip50 returns an optional of 50-tuples.
func Zip50[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50]) Optional[tuples.Tuple50[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid {
		return Optional[tuples.Tuple50[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50]]{
			value: tuples.Tuple50[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value, V47: v47.value, V48: v48.value, V49: v49.value, V50: v50.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple50[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50]]{}
}

// Zip51 returns an optional of 51-tuples.
func Zip51[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51]) Optional[tuples.Tuple51[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid {
		return Optional[tuples.Tuple51[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51]]{
			value: tuples.Tuple51[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value, V47: v47.value, V48: v48.value, V49: v49.value, V50: v50.value, V51: v51.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple51[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51]]{}
}

// Zip52 returns an optional of 52-tuples.
func Zip52[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52]) Optional[tuples.Tuple52[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid {
		return Optional[tuples.Tuple52[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52]]{
			value: tuples.Tuple52[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value, V47: v47.value, V48: v48.value, V49: v49.value, V50: v50.value, V51: v51.value, V52: v52.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple52[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52]]{}
}

// Zip53 returns an optional of 53-tuples.
func Zip53[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53]) Optional[tuples.Tuple53[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid {
		return Optional[tuples.Tuple53[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53]]{
			value: tuples.Tuple53[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value, V47: v47.value, V48: v48.value, V49: v49.value, V50: v50.value, V51: v51.value, V52: v52.value, V53: v53.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple53[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53]]{}
}

// Zip54 returns an optional of 54-tuples.
func Zip54[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54]) Optional[tuples.Tuple54[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid {
		return Optional[tuples.Tuple54[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54]]{
			value: tuples.Tuple54[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value, V47: v47.value, V48: v48.value, V49: v49.value, V50: v50.value, V51: v51.value, V52: v52.value, V53: v53.value, V54: v54.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple54[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54]]{}
}

// Zip55 returns an optional of 55-tuples.
func Zip55[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55]) Optional[tuples.Tuple55[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid {
		return Optional[tuples.Tuple55[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55]]{
			value: tuples.Tuple55[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value, V47: v47.value, V48: v48.value, V49: v49.value, V50: v50.value, V51: v51.value, V52: v52.value, V53: v53.value, V54: v54.value, V55: v55.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple55[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55]]{}
}

// Zip56 returns an optional of 56-tuples.
func Zip56[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55], v56 Optional[T56]) Optional[tuples.Tuple56[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid && v56.valid {
		return Optional[tuples.Tuple56[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56]]{
			value: tuples.Tuple56[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value, V47: v47.value, V48: v48.value, V49: v49.value, V50: v50.value, V51: v51.value, V52: v52.value, V53: v53.value, V54: v54.value, V55: v55.value, V56: v56.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple56[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56]]{}
}

// Zip57 returns an optional of 57-tuples.
func Zip57[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55], v56 Optional[T56], v57 Optional[T57]) Optional[tuples.Tuple57[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid && v56.valid && v57.valid {
		return Optional[tuples.Tuple57[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57]]{
			value: tuples.Tuple57[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value, V47: v47.value, V48: v48.value, V49: v49.value, V50: v50.value, V51: v51.value, V52: v52.value, V53: v53.value, V54: v54.value, V55: v55.value, V56: v56.value, V57: v57.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple57[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57]]{}
}

// Zip58 returns an optional of 58-tuples.
func Zip58[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55], v56 Optional[T56], v57 Optional[T57], v58 Optional[T58]) Optional[tuples.Tuple58[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid && v56.valid && v57.valid && v58.valid {
		return Optional[tuples.Tuple58[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58]]{
			value: tuples.Tuple58[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value, V47: v47.value, V48: v48.value, V49: v49.value, V50: v50.value, V51: v51.value, V52: v52.value, V53: v53.value, V54: v54.value, V55: v55.value, V56: v56.value, V57: v57.value, V58: v58.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple58[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58]]{}
}

// Zip59 returns an optional of 59-tuples.
func Zip59[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55], v56 Optional[T56], v57 Optional[T57], v58 Optional[T58], v59 Optional[T59]) Optional[tuples.Tuple59[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid && v56.valid && v57.valid && v58.valid && v59.valid {
		return Optional[tuples.Tuple59[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59]]{
			value: tuples.Tuple59[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value, V47: v47.value, V48: v48.value, V49: v49.value, V50: v50.value, V51: v51.value, V52: v52.value, V53: v53.value, V54: v54.value, V55: v55.value, V56: v56.value, V57: v57.value, V58: v58.value, V59: v59.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple59[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59]]{}
}

// Zip60 returns an optional of 60-tuples.
func Zip60[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55], v56 Optional[T56], v57 Optional[T57], v58 Optional[T58], v59 Optional[T59], v60 Optional[T60]) Optional[tuples.Tuple60[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid && v56.valid && v57.valid && v58.valid && v59.valid && v60.valid {
		return Optional[tuples.Tuple60[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60]]{
			value: tuples.Tuple60[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value, V47: v47.value, V48: v48.value, V49: v49.value, V50: v50.value, V51: v51.value, V52: v52.value, V53: v53.value, V54: v54.value, V55: v55.value, V56: v56.value, V57: v57.value, V58: v58.value, V59: v59.value, V60: v60.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple60[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60]]{}
}

// Zip61 returns an optional of 61-tuples.
func Zip61[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55], v56 Optional[T56], v57 Optional[T57], v58 Optional[T58], v59 Optional[T59], v60 Optional[T60], v61 Optional[T61]) Optional[tuples.Tuple61[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid && v56.valid && v57.valid && v58.valid && v59.valid && v60.valid && v61.valid {
		return Optional[tuples.Tuple61[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61]]{
			value: tuples.Tuple61[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value, V47: v47.value, V48: v48.value, V49: v49.value, V50: v50.value, V51: v51.value, V52: v52.value, V53: v53.value, V54: v54.value, V55: v55.value, V56: v56.value, V57: v57.value, V58: v58.value, V59: v59.value, V60: v60.value, V61: v61.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple61[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61]]{}
}

// Zip62 returns an optional of 62-tuples.
func Zip62[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55], v56 Optional[T56], v57 Optional[T57], v58 Optional[T58], v59 Optional[T59], v60 Optional[T60], v61 Optional[T61], v62 Optional[T62]) Optional[tuples.Tuple62[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid && v56.valid && v57.valid && v58.valid && v59.valid && v60.valid && v61.valid && v62.valid {
		return Optional[tuples.Tuple62[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62]]{
			value: tuples.Tuple62[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value, V47: v47.value, V48: v48.value, V49: v49.value, V50: v50.value, V51: v51.value, V52: v52.value, V53: v53.value, V54: v54.value, V55: v55.value, V56: v56.value, V57: v57.value, V58: v58.value, V59: v59.value, V60: v60.value, V61: v61.value, V62: v62.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple62[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62]]{}
}

// Zip63 returns an optional of 63-tuples.
func Zip63[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55], v56 Optional[T56], v57 Optional[T57], v58 Optional[T58], v59 Optional[T59], v60 Optional[T60], v61 Optional[T61], v62 Optional[T62], v63 Optional[T63]) Optional[tuples.Tuple63[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid && v56.valid && v57.valid && v58.valid && v59.valid && v60.valid && v61.valid && v62.valid && v63.valid {
		return Optional[tuples.Tuple63[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63]]{
			value: tuples.Tuple63[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value, V47: v47.value, V48: v48.value, V49: v49.value, V50: v50.value, V51: v51.value, V52: v52.value, V53: v53.value, V54: v54.value, V55: v55.value, V56: v56.value, V57: v57.value, V58: v58.value, V59: v59.value, V60: v60.value, V61: v61.value, V62: v62.value, V63: v63.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple63[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63]]{}
}

// Zip64 returns an optional of 64-tuples.
func Zip64[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64 any](v1 Optional[T1], v2 Optional[T2], v3 Optional[T3], v4 Optional[T4], v5 Optional[T5], v6 Optional[T6], v7 Optional[T7], v8 Optional[T8], v9 Optional[T9], v10 Optional[T10], v11 Optional[T11], v12 Optional[T12], v13 Optional[T13], v14 Optional[T14], v15 Optional[T15], v16 Optional[T16], v17 Optional[T17], v18 Optional[T18], v19 Optional[T19], v20 Optional[T20], v21 Optional[T21], v22 Optional[T22], v23 Optional[T23], v24 Optional[T24], v25 Optional[T25], v26 Optional[T26], v27 Optional[T27], v28 Optional[T28], v29 Optional[T29], v30 Optional[T30], v31 Optional[T31], v32 Optional[T32], v33 Optional[T33], v34 Optional[T34], v35 Optional[T35], v36 Optional[T36], v37 Optional[T37], v38 Optional[T38], v39 Optional[T39], v40 Optional[T40], v41 Optional[T41], v42 Optional[T42], v43 Optional[T43], v44 Optional[T44], v45 Optional[T45], v46 Optional[T46], v47 Optional[T47], v48 Optional[T48], v49 Optional[T49], v50 Optional[T50], v51 Optional[T51], v52 Optional[T52], v53 Optional[T53], v54 Optional[T54], v55 Optional[T55], v56 Optional[T56], v57 Optional[T57], v58 Optional[T58], v59 Optional[T59], v60 Optional[T60], v61 Optional[T61], v62 Optional[T62], v63 Optional[T63], v64 Optional[T64]) Optional[tuples.Tuple64[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64]] {
	if v1.valid && v2.valid && v3.valid && v4.valid && v5.valid && v6.valid && v7.valid && v8.valid && v9.valid && v10.valid && v11.valid && v12.valid && v13.valid && v14.valid && v15.valid && v16.valid && v17.valid && v18.valid && v19.valid && v20.valid && v21.valid && v22.valid && v23.valid && v24.valid && v25.valid && v26.valid && v27.valid && v28.valid && v29.valid && v30.valid && v31.valid && v32.valid && v33.valid && v34.valid && v35.valid && v36.valid && v37.valid && v38.valid && v39.valid && v40.valid && v41.valid && v42.valid && v43.valid && v44.valid && v45.valid && v46.valid && v47.valid && v48.valid && v49.valid && v50.valid && v51.valid && v52.valid && v53.valid && v54.valid && v55.valid && v56.valid && v57.valid && v58.valid && v59.valid && v60.valid && v61.valid && v62.valid && v63.valid && v64.valid {
		return Optional[tuples.Tuple64[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64]]{
			value: tuples.Tuple64[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64]{V1: v1.value, V2: v2.value, V3: v3.value, V4: v4.value, V5: v5.value, V6: v6.value, V7: v7.value, V8: v8.value, V9: v9.value, V10: v10.value, V11: v11.value, V12: v12.value, V13: v13.value, V14: v14.value, V15: v15.value, V16: v16.value, V17: v17.value, V18: v18.value, V19: v19.value, V20: v20.value, V21: v21.value, V22: v22.value, V23: v23.value, V24: v24.value, V25: v25.value, V26: v26.value, V27: v27.value, V28: v28.value, V29: v29.value, V30: v30.value, V31: v31.value, V32: v32.value, V33: v33.value, V34: v34.value, V35: v35.value, V36: v36.value, V37: v37.value, V38: v38.value, V39: v39.value, V40: v40.value, V41: v41.value, V42: v42.value, V43: v43.value, V44: v44.value, V45: v45.value, V46: v46.value, V47: v47.value, V48: v48.value, V49: v49.value, V50: v50.value, V51: v51.value, V52: v52.value, V53: v53.value, V54: v54.value, V55: v55.value, V56: v56.value, V57: v57.value, V58: v58.value, V59: v59.value, V60: v60.value, V61: v61.value, V62: v62.value, V63: v63.value, V64: v64.value},
			valid: true,
		}
	}
	return Optional[tuples.Tuple64[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64]]{}
}
